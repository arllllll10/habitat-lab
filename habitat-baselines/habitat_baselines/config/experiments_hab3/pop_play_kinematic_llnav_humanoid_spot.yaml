# @package _global_  
# issue 1556

defaults:
  - /benchmark/rearrange: multi_agent_tidy_house
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /habitat/simulator/sim_sensors@habitat_baselines.eval.extra_sim_sensors.third_rgb_sensor: third_rgb_sensor
  - /habitat_baselines/rl/agent: pop_play
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_0.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_1.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_0: hab3_hl_neural_ma
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_1: hab3_hl_neural_ma
  - /habitat_baselines/rl/policy/hierarchical_policy/defined_skills@habitat_baselines.rl.policy.agent_0.hierarchical_policy.defined_skills: oracle_skills_ma
  - /habitat_baselines/rl/policy/hierarchical_policy/defined_skills@habitat_baselines.rl.policy.agent_1.hierarchical_policy.defined_skills: oracle_skills_ma_humanoid



  - /habitat/task/measurements:
    - composite_subgoal_reward
  - /habitat/task/lab_sensors:
    - relative_resting_pos_sensor
    - target_start_sensor
    - goal_sensor
    - joint_sensor
    - is_holding_sensor
    - end_effector_sensor
    - target_start_gps_compass_sensor
    - target_goal_gps_compass_sensor
    - localization_sensor
    - humanoid_joint_sensor
    - other_agent_gps
    - has_finished_oracle_nav

  - /habitat/task/lab_sensors@habitat.task.lab_sensors.agent_0_should_replan: should_replan
  - /habitat/task/lab_sensors@habitat.task.lab_sensors.agent_1_should_replan: should_replan
  - /habitat/task/actions@habitat.task.actions.agent_0_arm_action: arm_action
  - /habitat/task/actions@habitat.task.actions.agent_0_base_velocity: base_velocity_leg_animation
  - /habitat/task/actions@habitat.task.actions.agent_0_rearrange_stop: rearrange_stop
  - /habitat/task/actions@habitat.task.actions.agent_0_pddl_apply_action: pddl_apply_action
  - /habitat/task/actions@habitat.task.actions.agent_0_oracle_nav_action: oracle_nav_action

  - /habitat/task/actions@habitat.task.actions.agent_1_base_velocity: base_velocity
  - /habitat/task/actions@habitat.task.actions.agent_1_rearrange_stop: rearrange_stop
  - /habitat/task/actions@habitat.task.actions.agent_1_pddl_apply_action: pddl_apply_action
  - /habitat/task/actions@habitat.task.actions.agent_1_oracle_nav_action: oracle_nav_action

  - override /habitat/task/rearrange: multi_agent_tidy_house_base
  # For Spot observation space
  - override /habitat/simulator/agents@habitat.simulator.agents.agent_0: rgbd_head_rgbd_arm_agent
  - _self_

replan_distance: 1.5

hydra:
  job:
    name: 'pop_play_8_humanoid_spot'

habitat:
  task:
    lab_sensors:
      agent_0_should_replan:
        x_len: 2.0
        y_len: 1.5
        agent_idx: 0
      agent_1_should_replan:
        x_len: 2.0
        y_len: 1.5
        agent_idx: 1
    actions:
      agent_0_arm_action:
        type: "ArmAction"
        arm_controller: "ArmRelPosMaskKinematicAction"
        arm_joint_mask: [1,1,0,1,1,1,1]
        arm_joint_dimensionality: 7
        grasp_thresh_dist: 0.5
        disable_grip: False
        delta_pos_limit: 0.20
        ee_ctrl_lim: 0.015
        grip_controller: MagicGraspAction

      agent_1_oracle_nav_action:
        type: OracleNavAction
        motion_control: human_joints
        spawn_max_dist_to_obj: -1
  environment:
    max_episode_steps: 1000

  gym:
    obs_keys:
      - agent_0_head_depth
      - agent_0_articulated_agent_arm_depth
      - agent_0_relative_resting_position
      - agent_0_obj_start_sensor
      - agent_0_obj_goal_sensor
      - agent_0_obj_start_gps_compass
      - agent_0_obj_goal_gps_compass
      - agent_0_joint
      - agent_0_is_holding
      - agent_0_ee_pos
      - agent_0_localization_sensor
      - agent_0_other_agent_gps
      - agent_0_has_finished_oracle_nav
      - agent_0_should_replan
      - agent_1_head_depth
      - agent_1_relative_resting_position
      - agent_1_obj_start_sensor
      - agent_1_obj_goal_sensor
      - agent_1_obj_start_gps_compass
      - agent_1_obj_goal_gps_compass
      - agent_1_is_holding
      - agent_1_ee_pos
      - agent_1_localization_sensor
      - agent_1_humanoid_joint_sensor
      - agent_1_other_agent_gps
      - agent_1_has_finished_oracle_nav
      - agent_1_should_replan

  simulator:
    # Add Spot robot agents
    agents:
      agent_0:
        radius: 0.25
        height: 1.8
        articulated_agent_urdf: data/robots/hab_spot_arm/urdf/hab_spot_arm.urdf
        articulated_agent_type: "SpotRobot"
        sim_sensors:
          arm_rgb_sensor:
            height: 480
            width: 640
            hfov: 47
          arm_depth_sensor:
            height: 224
            width: 171
            hfov: 55
      agent_1:
        articulated_agent_urdf: 'data/humanoids/humanoid_data/male_1/male_1.urdf'
        articulated_agent_type: 'KinematicHumanoid'
        rest_pose_data_path: 'data/humanoids/humanoid_data/standing_pose_smplx.pkl'
        motion_data_path: "data/humanoids/humanoid_data/male_1/male_1_motion_data_smplx.pkl"
    kinematic_mode: True
    ac_freq_ratio: 1
    step_physics: False
    habitat_sim_v0:
      allow_sliding: True

habitat_baselines:
  verbose: False
  trainer_name: "ddppo"
  updater_name: "HRLPPO"
  distrib_updater_name: "HRLDDPPO"
  torch_gpu_id: 0
  video_fps: 30
  video_dir: ${hydra:sweep.dir}/${hydra:sweep.subdir}/video
  tensorboard_dir: ${hydra:sweep.dir}/${hydra:sweep.subdir}/tb
  eval_ckpt_path_dir: ./checkpoints/latest.pth
  checkpoint_folder: ${hydra:sweep.dir}/${hydra:sweep.subdir}/checkpoints
  log_file: ${hydra:sweep.dir}/${hydra:sweep.subdir}/train.log
  num_environments: 96
  num_updates: -1
  total_num_steps: 1.0e10
  log_interval: 1
  num_checkpoints: 20
  force_torch_single_threaded: True
  eval_keys_to_include_in_name: ['composite_success']
  load_resume_state_config: False
  rollout_storage_name: "HrlRolloutStorage"

  evaluate: False
  writer_type: 'wb'

  wb:
    project_name: 'hab3'
    entity: 'andrew-colab'
    run_name: ${hydra:job.name}/${now:%Y-%m-%d}/${now:%H-%M-%S}/${hydra:job.num}

  profiling:
    enable_perf_logger: True
    perf_logger_skip_interval: 20

  eval:
    should_load_ckpt: True
    video_option: ["disk"]

  rl:
    agent:
      num_pool_agents_per_type: [1, 8]
      agent_sample_interval: 20
    policy:
      agent_0:
        hierarchical_policy:
          high_level_policy:
            replan_dist: ${replan_distance}
            allowed_actions:
              - nav_to_receptacle_by_name
              - nav_to_goal
              - nav_to_obj
              - pick
              - place
            policy_input_keys:
              - "joint"
              - "is_holding"
              - "obj_start_sensor"
              - "obj_goal_sensor"
              - "obj_start_gps_compass"
              - "obj_goal_gps_compass"
              - "other_agent_gps"
          # Override to use the oracle navigation skill (which will actually execute navigation).
          defined_skills:

            pick:
              skill_name: "PickSkillPolicy"
              obs_skill_inputs: ["obj_start_sensor"]
              load_ckpt_file: "data/models/pick_latest.pth"
              max_skill_steps: 500
              obs_skill_input_dim: 3

            # place:
            #   skill_name: "PlaceSkillPolicy"
            #   obs_skill_inputs: ["obj_goal_sensor"]
            #   load_ckpt_file: "data/models/place_ckpt.343.pth"
            #   max_skill_steps: 500
            #   obs_skill_input_dim: 3

            nav_to_obj:
              skill_name: "NavSkillPolicy"
              obs_skill_inputs: ["goal_to_agent_gps_compass"]
              load_ckpt_file: "data/models/latest_socnav_jimmy.pth"
              max_skill_steps: 500
              obs_skill_input_dim: 2
              pddl_action_names: ["nav_to_obj", "nav_to_goal", "nav_to_robot", "nav_to_receptacle_by_name"]
            nav_to_robot:
              skill_name: "NavSkillPolicy"
              obs_skill_inputs: ["goal_to_agent_gps_compass"]
              load_ckpt_file: "data/models/latest_socnav_jimmy.pth"
              max_skill_steps: 500
              obs_skill_input_dim: 2
              pddl_action_names: ["nav_to_obj", "nav_to_goal", "nav_to_robot", "nav_to_receptacle_by_name"]
      agent_1:
        hierarchical_policy:
          high_level_policy:
            replan_dist: ${replan_distance}
            allowed_actions:
              - nav_to_receptacle_by_name
              - nav_to_goal
              - nav_to_obj
              - pick
              - place
            policy_input_keys:
              - "head_depth"
              - "humanoid_joint_sensor"
              - "is_holding"
              - "obj_start_sensor"
              - "obj_goal_sensor"
              - "obj_start_gps_compass"
              - "obj_goal_gps_compass"
              - "other_agent_gps"
          # Override to use the oracle navigation skill (which will actually execute navigation).
          defined_skills:
            nav_to_obj:
              skill_name: "OracleNavPolicy"
              obs_skill_inputs: ["obj_start_sensor", "abs_obj_start_sensor", "obj_goal_sensor", "abs_obj_goal_sensor"]
              max_skill_steps: 300
              stop_thresh: 0.00001
              apply_postconds: False

    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 1
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.0001
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 256
      use_gae: True
      gamma: 0.99
      tau: 0.95

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether the visual encoder backbone will be trained.
      train_encoder: True
      # Whether to reset the critic linear layer
      reset_critic: False
      # Model parameters
      backbone: resnet18
      rnn_type: LSTM
      num_recurrent_layers: 2